failure_send:
  stage: send_message
  when: on_failure
  only:
    - develop
  tags:
    - ${RUNNER}
  script:
    - |
      curl ${NOTIFICATION} -H 'Content-Type: application/json' \
         -d '
         {
            "msgtype": "markdown",
            "markdown": {
               "content":"'"GitLab CICD运行结果：<font color=RED>FAIL</font> \n
                >项目: <font color=comment>${CI_PROJECT_URL}</font>
                >分支: <font color=comment>${CI_COMMIT_BRANCH}</font>
                >commit号: <font color=comment>${CI_COMMIT_SHA}</font>
                >commit信息: <font color=comment>${CI_COMMIT_MESSAGE}</font>
                >提交者: <font color=comment>${GITLAB_USER_EMAIL}</font>"'"
            }
        }'

success_send:
  stage: send_message
  only:
    - develop
  tags:
    - ${RUNNER}
  script:
    - |
      curl ${NOTIFICATION} -H 'Content-Type: application/json' \
         -d '
         {
            "msgtype": "markdown",
            "markdown": {
               "content":"'"GitLab CICD运行结果：<font color=GREEN>SUCCESS</font> \n
                >项目: <font color=comment>${CI_PROJECT_URL}</font>
                >分支: <font color=comment>${CI_COMMIT_BRANCH}</font>
                >commit号: <font color=comment>${CI_COMMIT_SHA}</font>
                >commit信息: <font color=comment>${CI_COMMIT_MESSAGE}</font>
                >提交者: <font color=comment>${GITLAB_USER_EMAIL}</font>
                >输出镜像: <font color=comment>yasin/app:${VERSION}</font>
                >golangci-lint: <font color=comment>golangci-lint.txt</font>"'"
            }
        }'
    - |
      file_name="golangci-lint.txt"
      file_dir=${CI_PROJECT_DIR}
      webhook=${NOTIFICATION}
      msg () {
        key=$(echo "${webhook}" | awk -F = '{print $2}')
        if test -s "${file_dir}"; then
          file_id=`curl -s -F media=@${file_name} "https://qyapi.weixin.qq.com/cgi-bin/webhook/upload_media?key=${key}&type=file" |awk 'END{print}'|awk  -F '"'  '{print $14}'`
        else
          echo "未检测到文件,脚本退出"
          exit 1
        fi
        curl "${webhook}" -H 'Content-Type: application/json' -d '{"msgtype": "file","file": {"media_id": "'"${file_id}"'"}}'  
      }
      msg

