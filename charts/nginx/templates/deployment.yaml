apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: {{ .Release.Namespace }}
  labels:
    app: nginx
    component: nginx
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
        component: nginx
    spec:
      {{- if .Values.nginx.nodeName }}
      nodeName: {{ .Values.nginx.nodeName }}
      {{- end }}
      containers:
        - name: nginx
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          image: "{{ .Values.nginx.image }}:{{ .Values.nginx.tag }}"
          env:
            {{- include "common.env" . }}
          volumeMounts:
            {{- include "common.volumeMounts" . }}
{{/*            {{- include "webRoot.volumeMounts" . }}*/}}
            - name: config
              mountPath: /opt/bitnami/nginx/conf/nginx.conf
              subPath: nginx.conf
            - name: nginx-confd
              mountPath: /opt/bitnami/nginx/conf/conf.d
            - name: nginx-ca
              mountPath: /home/yasin/nginx/ca
      volumes:
        {{- include "common.volumes" . }}
{{/*        {{- include "webRoot.volumes" . }}*/}}
        - name: config
          configMap:
            name: nginx-config
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: nginx-confd
          configMap:
            name: nginx-config
        - name: nginx-ca
          configMap:
            name: nginx-config
            items:
              - key: ca.crt
                path: ca.crt
              - key: client.crt
                path: client.crt
              - key: client.key
                path: client.key
              - key: server.crt
                path: server.crt
              - key: server.key
                path: server.key