# this is test message
worker_processes  8;

events {
    use epoll;
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    server_names_hash_bucket_size 128;
    log_format main '$remote_addr $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '$http_user_agent $http_x_forwarded_for $request_time '
                    '"$upstream_response_time $upstream_addr $upstream_status"';

    access_log /opt/bitnami/nginx/logs/access.log main;

    sendfile           on;
    server_tokens      off;
    keepalive_timeout  65;
    proxy_read_timeout 600;
    resolver kube-dns.kube-system.svc.cluster.local valid=30s;

    #set headers for api
    proxy_set_header Host                    $http_host;
    proxy_set_header X-Real-IP               $remote_addr;
    proxy_set_header X-Forwarded-Proto       $scheme;
    proxy_set_header X-Forwarded-For         $proxy_add_x_forwarded_for;
    proxy_set_header X-Appengine-Remote-Addr $remote_addr;

    #cors config
    add_header Access-Control-Allow-Origin   '*' always;
    add_header Access-Control-Allow-Methods  'GET,POST,PUT,DELETE,OPTIONS' always;
    add_header Access-Control-Allow-Headers  '*' always;
    add_header Access-Control-Expose-Headers 'Content-Disposition' always;
    add_header Access-Control-Max-Age        1728000 always;
    add_header Vary                          'Origin';

    #for security settings for app
    add_header Server                            'yasin/1.0.6';
    add_header Referrer-Policy                   'origin';
    add_header X-Content-Type-Options            'nosniff';
    add_header X-Download-Options                'noopen';
    add_header X-Frame-Options                   'SAMEORIGIN';
    add_header X-Xss-Protection                  '1; mode=block';
    add_header X-Permitted-Cross-Domain-Policies 'none';
    add_header Strict-Transport-Security         'max-age=16070400; includeSubdomains';
    add_header Content-Security-Policy           "default-src * 'self';font-src * data:;connect-src *;img-src * 'self' data:;style-src * 'unsafe-inline';media-src *;script-src * 'self' 'unsafe-inline' 'unsafe-eval'";
    add_header Cache-Control                     'no-store';
    add_header Pragma                            'no-cache';

    #opti config
    fastcgi_buffer_size          128k;
    fastcgi_buffers              8 128k;
    fastcgi_busy_buffers_size    128k;
    fastcgi_temp_file_write_size 128k;

    #gzip config
    gzip              on;
    gzip_vary         on;
    gzip_static       on;
    gzip_min_length   1k;
    gzip_buffers      16 64k;
    gzip_http_version 1.1;
    gzip_comp_level   8;
    gzip_types        application/javascript text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    gzip_disable      "MSIE [1-6]\.";

    #other config
    autoindex off;
    client_max_body_size 1024m;
    client_body_buffer_size 300m;
    client_header_buffer_size 10k;
    large_client_header_buffers 2 10k;

    server {
        listen 8443      ssl;
        listen [::]:8443 ssl;
        server_name yasin-nginx;
        root  /opt/bitnami/nginx/html;

        #ssl verify
        ssl_certificate             /home/yasin/nginx/ca/server.crt;
        ssl_certificate_key         /home/yasin/nginx/ca/server.key;
        ssl_prefer_server_ciphers   on;
        ssl_protocols               TLSv1.2;
        ssl_session_cache           shared:SSL:1m;
        ssl_session_timeout         5m;

        if ($request_method = 'OPTIONS') {
            return 200;
        }

        location ~ /\.ht {
            deny all;
        }

        location / {
            try_files $uri $uri/ /index.html?/$request_uri;
        }
    }

    server {
        listen 8080;
        listen [::]:8080;
        server_name yasin-nginx;
        root  /opt/bitnami/nginx/html;

        if ($request_method = 'OPTIONS') {
            return 200;
        }

        location ~ /\.ht {
            deny all;
        }

        location / {
            try_files $uri $uri/ /index.html?/$request_uri;
        }
    }
}